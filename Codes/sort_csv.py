"""
Purpose : To read the the csv files generated by Diffparc_sumo and return panda tables sorted according to the session and 
          combined with participant data.

Inputs  : Panda data tables for Controls and PD subjects



Notes  : Path to the CSV files are wrt pwd. Outliers are hard coded.

"""
import numpy as np 
import pandas as pd



def get_csv_data(CT_path,PD_path):
  """This method reads csv files and remove user specified bad registered subjects and
  also remove NAN values and returns panda data structures for CT and PD.

  inputs: CT_path = path to CT csv file, PD_path = path to PD csv file"""

  #Reading csv files obtained from diffparc_sumo
  CT_df = pd.read_csv(CT_path)
  PD_df = pd.read_csv(PD_path)

  #Removing outlier subjects
  #bad_PD=['sub-3178_ses-Month24','sub-3558_ses-Baseline', 'sub-3758_ses-Month24','sub-3802_ses-Baseline','sub-3815_ses-Month12','sub-3830_ses-Baseline','sub-3835_ses-Baseline','sub-3835_ses-Month12','sub-3835_ses-Month24','sub-4013_ses-Month24','sub-4135_ses-Baseline']
  #Removing outlier subjects including patients with medication
  bad_PD=['sub-3178_ses-Month24','sub-3558_ses-Baseline', 'sub-3758_ses-Month24','sub-3802_ses-Baseline','sub-3815_ses-Month12','sub-3830_ses-Baseline','sub-3835_ses-Baseline','sub-3835_ses-Month12','sub-3835_ses-Month24','sub-4013_ses-Month24','sub-4135_ses-Baseline','sub-3868_ses-Baseline','sub-4082_ses-Baseline','sub-4083_ses-Baseline','sub-3592_ses-Baseline']
  PD_df=PD_df[-PD_df.isin(bad_PD)]

  #Removing nan values
  CT_sorted_df=CT_df.dropna()
  PD_sorted_df=PD_df.dropna()


  return CT_sorted_df,PD_sorted_df


def get_participant_data(session):
  """This method reads participant.tsv files and add them to csv files from diffparc

  inputs: session = Session that you want to sort the file. Eg: Baseline"""

  #Reading csv files obtained from diffparc_sumo
  CT_participants = pd.read_csv("../Data/CT/participants.tsv", sep='\t')
  PD_participants = pd.read_csv("../Data/PD/participants.tsv", sep='\t')
  #PD_participants = pd.read_csv("../Data/PD/participants_ct_adjusted.tsv", sep='\t')


  #Removing unnamed columns appeared in reading
  CT_participants = CT_participants.loc[:, ~CT_participants.columns.str.contains('^Unnamed')]
  PD_participants = PD_participants.loc[:, ~PD_participants.columns.str.contains('^Unnamed')]
  

  CT_participants = CT_participants.rename(columns={'participant_id': 'subj'})
  CT_subj_id = list(CT_participants["subj"])
  PD_participants = PD_participants.rename(columns={'participant_id': 'subj'})
  PD_subj_id = list(PD_participants["subj"])


  for i,IDs in enumerate(CT_subj_id):
    CT_subj_id[i]= IDs+'_ses-'+session

  for i,IDs in enumerate(PD_subj_id):
    PD_subj_id[i]= IDs+'_ses-'+session


  CT_participants.drop('subj', axis = 1, inplace = True)
  CT_participants['subj'] = CT_subj_id
  PD_participants.drop('subj', axis = 1, inplace = True)
  PD_participants['subj'] = PD_subj_id

  return CT_participants,PD_participants





def get_dataframes(CT_data_path,PD_data_path,session):
  """This method reads csv files and remove user specified bad registered subjects and
     also remove NAN values and returns panda data structures for CT and PD.

    inputs: CT_data_path = path to CT csv file, PD_data_path = path to PD csv file
            session= Session that you want to sort the file. Eg: Baseline """

  #Reading csv files obtained from diffparc_sumo

  CT_vals,PD_vals=get_csv_data(CT_data_path,PD_data_path)
  CT_participants,PD_participants=get_participant_data(session)

  CT_vals = pd.merge(CT_vals, CT_participants, on='subj')
  PD_vals = pd.merge(PD_vals, PD_participants, on='subj')

  return CT_vals,PD_vals




























    
        
      
    




