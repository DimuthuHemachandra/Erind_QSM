import numpy as np
import os
from sort_csv import get_dataframes
#from plotting_test import get_box_plots
from plotting import get_box_plots
from stat_calculator import do_ttest
from PD_features import get_side_affected,get_PD_medication
from UPDRS import get_UPDRS_results


session = "Baseline"
#diffparc_version = "dev"

out_path = "../Results/"
regions = ["Left_Limbic","Right_Limbic","Left_Executive","Right_Executive","Left_Rostral_motor","Right_Rostral_motor","Left_Caudal_motor","Right_Caudal_motor","Left_Parietal","Right_Parietal","Left_Occipital","Right_Occipital","Left_Temporal","Right_Temporal"]

def get_filename(type="volumes",atlas="striatum",loc="diffparc",reg="_",space="T1w",norm="off"):
	""" Generates a file name for a csv file generated by diffparc
	type = "volumes","dti_FA","dti_MD","surfarea","surfdisp"
	atlas = "striatul", "CIT168striatum" 
	loc = "diffparc","pathways" 
	reg = " "_reg-affine_" 
	space = "T1w", MNI152NLin2009cAsym" 
	norm = "off", "max" """

	filename = type+'_seed-'+atlas+'_targets-cortical_'+loc+reg+'space-'+space+'_norm-'+norm+'.csv'

	return filename

def make_out_dir(out_path):

	filename = out_path
	if not os.path.exists(os.path.dirname(filename)):
	    try:
	        os.makedirs(os.path.dirname(filename))
	    except OSError as exc: # Guard against race condition
	        if exc.errno != errno.EEXIST:
	          raise

###################################################################################################################

#VOLUME ANALYSIS

###################################################################################################################

def volume_analysis(regions,session,out_path):

	out_path_vol = out_path+"volume_analysis/"
	make_out_dir(out_path_vol)
	filename = get_filename(type = "volumes",reg="_reg-affine_",space="MNI152NLin2009cAsym")
	print("file used:"+filename)
	CT_df,PD_df=get_dataframes("../Data/CT/diffparc_2/csv/"+filename,"../Data/PD/diffparc_2/csv/"+filename,session)
	CT_df = CT_df.loc[CT_df['Gender'] == "F"]
	PD_df = PD_df.loc[PD_df['Gender'] == "F"]

	
	P_vals,PD_sig = do_ttest(CT_df,PD_df,regions,session,"_Volume_analysis",out_path_vol)
	get_box_plots(CT_df,PD_df,regions,session+"_Volume Analysis","Regions","Volumes",out_path_vol,PD_sig=PD_sig)

	
	


volume_analysis(regions,session,out_path)


def volume_analysis_with_DOMSIDE(regions,session,out_path):

	out_path = out_path+"volume_analysis/DOMSIDE/"
	CT_df,PD_df=get_dataframes("../Data/CT/diffparc_2/csv/volumes_seed-striatum_targets-cortical_diffparc_reg-affine_space-MNI152NLin2009cAsym_norm-off.csv","../Data/PD/diffparc_2/csv/volumes_seed-striatum_targets-cortical_diffparc_reg-affine_space-MNI152NLin2009cAsym_norm-off.csv",session)
	PD_Left,PD_Right = get_side_affected(PD_df,session)
	P_vals,PD_sig = do_ttest(CT_df,PD_Left,regions,session,"Left_side_volume",out_path)
	get_box_plots(CT_df,PD_Left,regions,session+"_Left_dominant_Volume Analysis","Regions","Volumes",out_path,PD_sig=PD_sig)
	

	P_vals,PD_sig = do_ttest(CT_df,PD_Right,regions,session,"Right_side_volume",out_path)
	get_box_plots(CT_df,PD_Right,regions,session+"_Right_dominant_Volume Analysis","Regions","Volumes",out_path,PD_sig=PD_sig)
	

#volume_analysis_with_DOMSIDE(regions,session,out_path)

#EDN OF VOLUME ANALYSIS
###################################################################################################################



###################################################################################################################

#SURFACE DISPLACEMENT ANALYSIS

###################################################################################################################

def surfdisplacement_analysis_with_DOMSIDE(regions,session,out_path):

	out_path = out_path+"volume_analysis/DOMSIDE/"
	CT_df,PD_df=get_dataframes("../Data/CT/diffparc_2/csv/volumes_seed-striatum_targets-cortical_diffparc_reg-affine_space-MNI152NLin2009cAsym_norm-off.csv","../Data/PD/diffparc_2/csv/volumes_seed-striatum_targets-cortical_diffparc_reg-affine_space-MNI152NLin2009cAsym_norm-off.csv",session)
	PD_Left,PD_Right = get_side_affected(PD_df,session)
	get_box_plots(CT_df,PD_Left,regions,session+"_Left_dominant_Volume_Analysis","Regions","Volumes",out_path)
	do_ttest(CT_df,PD_Left,regions,session,"Left_side_volume",out_path)

	get_box_plots(CT_df,PD_Right,regions,session+"_Right_dominant_Volume_Analysis","Regions","Volumes",out_path)
	P_vals,PD_sig = do_ttest(CT_df,PD_Right,regions,session,"_Right_side_volume",out_path)

#surfdisplacement_analysis_with_DOMSIDE(regions,session,out_path)

#EDN OF SURFACE DISPLACEMENT ANALYSIS
###################################################################################################################


###################################################################################################################

#UPDRS ANALYSIS

###################################################################################################################
def UPDRS_analysis(regions,session,out_path):

	out_path = out_path+"UPDRS/"

	#Volume analysis with UPDRS
	#CT_df,PD_df=get_dataframes("../Data/CT/diffparc_2/csv/volumes_seed-striatum_targets-cortical_diffparc_reg-affine_space-MNI152NLin2009cAsym_norm-off.csv","../Data/PD/diffparc_2/csv/volumes_seed-striatum_targets-cortical_diffparc_reg-affine_space-MNI152NLin2009cAsym_norm-off.csv",session)
	
	#Volume analysis with UPDRS
	#get_UPDRS_results(PD_df,regions,session,"Volume",out_path)

	#Volume analysis with UPDRS according to dominant side
	#PD_Left,PD_Right = get_side_affected(PD_df,session)
	#get_UPDRS_results(PD_Left,regions,session,"Volume_with_PD_Left",out_path)
	#get_UPDRS_results(PD_Right,regions,session,"Volume_with_PD_Right",out_path)

	#DTI analysis with UPDRS
	
	#FA analysis with UPDRS
	CT_df,PD_df=get_dataframes("../Data/CT/diffparc_2/csv/dti-FA_seed-striatum_targets-cortical_pathways_space-T1w.csv","../Data/PD/diffparc_2/csv/dti-FA_seed-striatum_targets-cortical_pathways_space-T1w.csv",session)
	#get_UPDRS_results(PD_df,regions,session,"FA_pathways",out_path)

	#FA analysis with UPDRS according to dominant side
	PD_Left,PD_Right = get_side_affected(PD_df,session)
	get_UPDRS_results(PD_Left,regions,session,"FA_with_PD_Left",out_path)
	get_UPDRS_results(PD_Right,regions,session,"FA_with_PD_Right",out_path)

	#MD analysis with UPDRS
	#CT_df,PD_df=get_dataframes("../Data/CT/diffparc_2/csv/dti-MD_seed-striatum_targets-cortical_pathways_space-T1w.csv","../Data/PD/diffparc_2/csv/dti-MD_seed-striatum_targets-cortical_pathways_space-T1w.csv",session)
	#get_UPDRS_results(PD_df,regions,session,"MD_pathways",out_path)

	#MD analysis with UPDRS according to dominant side
	#PD_Left,PD_Right = get_side_affected(PD_df,session)
	#get_UPDRS_results(PD_Left,regions,session,"MD_with_PD_Left",out_path)
	#get_UPDRS_results(PD_Right,regions,session,"MD_with_PD_Right",out_path)


#UPDRS_analysis(regions,session,out_path)


def PD_medication_analysis(regions,session,out_path):

	out_path_vol = out_path+"PD_med_analysis/Volumes/"
	make_out_dir(out_path_vol)
	filename = get_filename(type = "volumes",reg="_reg-affine_",space="MNI152NLin2009cAsym")
	print("file used:"+filename)
	filename ="dti-FA_seed-striatum_targets-cortical_diffparc_space-T1w_norm-off.csv"
	CT_df,PD_df=get_dataframes("../Data/CT/diffparc_2/csv/"+filename,"../Data/PD/diffparc_2/csv/"+filename,session)
	PD_med_df,PD_off_med_df,PD_on_med_df = get_PD_medication(PD_df,'PDMEDYN',session)

	get_box_plots(CT_df,PD_off_med_df,regions,session+"_off_med_Volume_Analysis","Regions","Volumes",out_path_vol)
	P_vals,PD_sig = do_ttest(CT_df,PD_off_med_df,regions,session,"_off_med_volume",out_path_vol)

	#print(PD_df)
	#print(PD_off_med_df)

	#get_box_plots(CT_df,PD_on_med_df,regions,session+"_on_med_Volume_Analysis","Regions","Volumes",out_path_vol)
	#do_ttest(CT_df,PD_on_med_df,regions,session,"_on_med_volume",out_path_vol)

	"""
	#DOMSIDE analysis with volume
	PD_Left,PD_Right = get_side_affected(PD_df,session)

	#Left Dominant
	out_path_vol_left = out_path+"PD_med_analysis/Volumes_with_PD_left/"
	make_out_dir(out_path_vol_left)

	PD_left_med_df,PD_left_off_med_df,PD_left_on_med_df = get_PD_medication(PD_Left,'PDMEDYN',session)

	get_box_plots(CT_df,PD_left_off_med_df,regions,session+"_leftPD_off_med_Volume_Analysis","Regions","Volumes",out_path_vol_left)
	do_ttest(CT_df,PD_left_off_med_df,regions,session,"_leftPD_off_med_volume",out_path_vol_left)
	
	get_box_plots(CT_df,PD_left_on_med_df,regions,session+"_leftPD_on_med_Volume_Analysis","Regions","Volumes",out_path_vol_left)
	do_ttest(CT_df,PD_left_on_med_df,regions,session,"_leftPD_on_med_volume",out_path_vol_left)

	#Right Dominant
	out_path_vol_right = out_path+"PD_med_analysis/Volumes_with_PD_right/"
	make_out_dir(out_path_vol_right)

	PD_right_med_df,PD_right_off_med_df,PD_right_on_med_df = get_PD_medication(PD_Right,'PDMEDYN',session)

	get_box_plots(CT_df,PD_right_off_med_df,regions,session+"_rightPD_off_med_Volume_Analysis","Regions","Volumes",out_path_vol_right)
	do_ttest(CT_df,PD_right_off_med_df,regions,session,"_rightPD_off_med_volume",out_path_vol_right)
	
	get_box_plots(CT_df,PD_right_on_med_df,regions,session+"_rightPD_on_med_Volume_Analysis","Regions","Volumes",out_path_vol_right)
	do_ttest(CT_df,PD_right_on_med_df,regions,session,"_rightPD_on_med_volume",out_path_vol_right)
	"""

#PD_medication_analysis(regions,session,out_path)






