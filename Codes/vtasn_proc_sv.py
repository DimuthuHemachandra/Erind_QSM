"""
Purpose : To read the the csv files generated by Diffparc_sumo and return panda tables sorted according to the session and 
          combined with participant data.

Inputs  : Panda data tables for Controls and PD subjects



Notes  : Path to the CSV files are wrt pwd. Outliers are hard coded.

"""
import numpy as np 
import pandas as pd
import glob
import matlab.engine
from scipy import stats
#eng = matlab.engine.start_matlab()
#eng.simple_script(nargout=0)
#eng.quit()


PPMI_data_path = '../Data/combat/all/Baseline/'
VTASN_data_path = '../Data/combat/all/VTASN_Baseline/'

VTASN_demographics = pd.read_csv("../Data/VTASN/participants.csv")

regions = ["Left_Limbic","Right_Limbic","Left_Executive","Right_Executive","Left_Rostral_motor","Right_Rostral_motor","Left_Caudal_motor","Right_Caudal_motor","Left_Parietal","Right_Parietal","Left_Occipital","Right_Occipital","Left_Temporal","Right_Temporal"]
feature_names = ["FA_norm_max","FA_norm_off","FA_pathways","MD_norm_max","MD_norm_off","MD_pathways","indepConnVolume","surf_area","surf,disp","Vol_MNI_norm_max","Vol_MNI_norm_off","Vol_T1_norm_max","Vol_T1_norm_off"]
#features = [0,3,6,7,8,9] #Added this to select any combination of files to be combined

#List all the csv file names in PD
PPMI_csv_file_list = glob.glob(PPMI_data_path+'*168*'+'.csv') #finding all the csv files

#sort alphebatically
PPMI_csv_file_list.sort()

VTASN_csv_file_list = []
file = []

#Create paths for the VTASN with the same file name as PPMI (This is to avoid having different file names)
for filenames in PPMI_csv_file_list:

  file_name = filenames.split('/')
  VTASN_csv_file_list.append(VTASN_data_path+file_name[-1]) # adding the path to match with CT folder.
  file_type = file_name[-1].split(".")
  file.append(file_type[0]) #Getting the just the file name


def get_VTASN_cols_matched(VTASN_demographics,VTASN_df,max_CNO):

  n_rows = len(VTASN_df.index)
  VTASN_CNO =[max_CNO+1] * n_rows
  group =['VTASN'] * n_rows
  #df = pd.DataFrame({'CNO': VTASN_CNO})
  VTASN_df.insert(2,"CNO", VTASN_CNO, True)
  VTASN_df.insert(2,"group", group, True)
  df = pd.merge(VTASN_demographics, VTASN_df, on='subj')

  df = df.drop(['Sex'], axis=1)

  return df

def outlier_detect(df,cut):
    for i in df.describe().columns:

        df_z = np.abs(stats.zscore(df[i]))

        x=np.array(df[i])
        p=[]
        for j,k in enumerate(x):

            if df_z[j]>cut:
                p.append(df[i].mean())
            else:
                p.append(k)
        df[i]=p
    return df

def split_df(df, headSize) :
    #splits a df into two dfs, Head and tail. 
    #Headsize is the length of the head.
    CT = df.head(headSize)
    PD = df.tail(len(df)-headSize)

    return CT,PD

def remove_vtsn_outliers(df):
  #Removing outliers from the vtsn dataset. 
  #Here the dataset get divided into two and remove outliers sperately

  subj = df['subj']
  df = df.drop('subj' , axis='columns') #removing subject colums.

  CT,PD = split_df(df,21)


  CT = CT[(np.abs(stats.zscore(CT)) < 2).all(axis=1)] # without outliers
  PD = PD[(np.abs(stats.zscore(PD)) < 2).all(axis=1)] # without outliers

  #df = outlier_detect(df,1.5)

  df = pd.concat([CT, PD],sort=False)
  df = df.join(subj, how='outer')
  cols = list(df.columns)
  cols = [cols[-1]] + cols[:-1]
  df = df[cols]
  df = df.dropna()

  return df



def get_combined_table(VTASN_csv_file_list,PPMI_csv_file_list): 
  """Read list of file names in a directory that contains csv files for a group and add them into one.
  file_list: list of paths to csv files
  grou: string specifying the two groups. "CT" or "PD" 

  return: A panda df of combined data"""

  df_base=pd.read_csv(VTASN_csv_file_list[0])
  subjects = list(df_base['subj'])

  #groupID = list(df_base['group_ID'])
  #df1 = pd.DataFrame({'subj': subjects,'group_ID' : groupID})

  for i in range(len(VTASN_csv_file_list)):

    VTASN_df=pd.read_csv(VTASN_csv_file_list[i])
    #VTASN_df=remove_vtsn_outliers(VTASN_df)
    PPMI_df = pd.read_csv(PPMI_csv_file_list[i])
    VTASN_df = VTASN_df.replace(0, np.nan)
    VTASN_df=VTASN_df.dropna()
    max_CNO = PPMI_df['CNO'].max()

    #print(max_CNO)

    VTASN_new_df = get_VTASN_cols_matched(VTASN_demographics,VTASN_df,max_CNO)

    #CT,PD = split_df(VTASN_new_df,21)
    CT_vtasn = VTASN_new_df.loc[VTASN_new_df['group_ID'] == 0]
    CT_vtasn = CT_vtasn.replace(13, 10) #This is a hardcoded hack
    PD_vtasn = VTASN_new_df.loc[VTASN_new_df['group_ID'] == 1]
    CT_ppmi = PPMI_df.loc[PPMI_df['group'] == "Control"]
    PD_ppmi = PPMI_df.loc[PPMI_df['group'] == "PD"]
    print(PD_ppmi)

    #df = pd.merge(PPMI_df, VTASN_new_df, on='subj')
    df_combined_CT = pd.concat([CT_ppmi, CT_vtasn],sort=False)
    df_combined_PD = pd.concat([PD_ppmi, PD_vtasn],sort=False)



    print("These files are being added together and processing with combat:")
    print(file[i])

    df_combined_CT.to_csv("../Data/combat/all/PPMI_with_VTASN/CT/"+file[i]+".csv", sep=',', index=False)
    df_combined_PD.to_csv("../Data/combat/all/PPMI_with_VTASN/PD/"+file[i]+".csv", sep=',', index=False)

  #Running combat for the combined tables
  #eng = matlab.engine.start_matlab()
  #eng.harmonize_VTASN(nargout=0)
  #eng.quit()



def strip_PPMI(group):
  #Removing PPMI data and leaving just VTASN data
  #The table has Nan values for the goup_ID column for PPMI data and by just dropping Nan rows we can just get VTASN

  file_list = glob.glob("../Data/combat/all/combat_PPMI_with_VTASN/"+group+"/"+'*168*'+'.csv')
  file_list.sort()

  print(file_list)

  for i in range(len(file_list)):

    df=pd.read_csv(file_list[i])
    df_vtsn = df.dropna()
    df_vtsn = df_vtsn.drop(['group'], axis=1)
    
    df_vtsn.to_csv("../Data/combat/all/testdata_VTASN/"+group+"/"+file[i]+".csv", sep=',', index=False)

    df_ppmi = df[df.isnull().any(axis=1)]
    #print(df_ppmi)
    CT = df_ppmi.loc[df_ppmi['group'] == "Control"]
    PD = df_ppmi.loc[df_ppmi['group'] == "PD"]
    CT = CT.replace(np.nan,0)
    PD = PD.replace(np.nan,1)

    df_ppmi_fixed = pd.concat([CT,PD],sort=False)
    df_ppmi_fixed = df_ppmi_fixed.drop(['group'], axis=1)

    df_ppmi_fixed.to_csv("../Data/combat/all/train_PPMI_with_VTASN/"+group+"/"+file[i]+".csv", sep=',', index=False)
    #print(PD)




  

  """for i in features:

    
    df=pd.read_csv(file_list[i])
    #df = df.drop(['age_at_baseline', 'CNO','group_ID'], axis=1)

    #Looping through all the regions and giving it a new name (append i) at the end to distinguish them
    for cols in regions:
        df.rename(columns={cols: cols+"_"+str(i+1)}, inplace=True)

    df1 = pd.merge(df1, df, on='subj')

  sorted_subj = list(df1['subj'])
  #print(sorted_subj)



  sorted_df=df1.dropna()

  if group == 'CT':
    vtasn_combined = sorted_df.drop(sorted_df.index[0:52])
    #vtasn_combined.to_csv("../Results/VTASN/CT_combined.csv", sep=',', index=False)
  if group == 'PD':
    vtasn_combined = sorted_df.drop(sorted_df.index[0:100])
    #vtasn_combined.to_csv("../Results/VTASN/PD_combined.csv", sep=',', index=False)

  return vtasn_combined"""


#get_combined_table(VTASN_csv_file_list,PPMI_csv_file_list)

strip_PPMI("CT")
strip_PPMI("PD")
































    
        
      
    




